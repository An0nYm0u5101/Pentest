import pefile
import ctypes
from os import walk
import sys

class disable_file_system_redirection:
    _disable = ctypes.windll.kernel32.Wow64DisableWow64FsRedirection
    _revert = ctypes.windll.kernel32.Wow64RevertWow64FsRedirection
    def __enter__(self):
        self.old_value = ctypes.c_long()
        self.success = self._disable(ctypes.byref(self.old_value))
    def __exit__(self, type, value, traceback):
        if self.success:
            self._revert(self.old_value)


disable_file_system_redirection().__enter__()


DRIVER_PATH = "c:\\windows\\system32\\drivers\\"

driver_names = []
for (dirpath, dirnames, filenames) in walk(DRIVER_PATH):
    driver_names.extend(filenames)
    break

driver_names = [_ for _ in driver_names if _[-3:] == "sys" or _[-3:] == "SYS"]

final_list = []
for driver_name in driver_names:
    try:
        pe = pefile.PE(DRIVER_PATH + driver_name)
    except pefile.PEFormatError as message:
        print message, driver_name
    pe.parse_data_directories()
    kmdf = False
    try:
        for entry in pe.DIRECTORY_ENTRY_IMPORT:        
            if entry.dll == "WDFLDR.SYS":
                kmdf = True
                sys.stdout.write("+")
                break
        if kmdf:
            final_list.append(driver_name)
        else:
            sys.stdout.write("-")
    except AttributeError:
        pass
		
print("\n")
print(final_list)

