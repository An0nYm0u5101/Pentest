Extract Manifest and Data from the apk:

aapt -> Android Asset Packaging Tool

+] aapt l -a app.apk

+] apktool d test.apk // decompile
+] apktool b test // compile

ADB CheatSheet:

+] adb devices -> list devices
+] adb -s <device> command -> execute command over a specific device
+] adb connect ip:port -> connect to that device
+] adb install path-to-apk
+] adb push /path/to/local/file /path/on/android/device
+] adb pull /path/on/android/device /path/to/local/file
+] adb shell
+] adb shell <command>
+] adb forward tcp:<local_port> tcp:<device_port> //Forward a TCP port on the local host to a port on the device
+] adb logcat // View the device logs


shell@android:/ $ pm list packages -> ask the package manager to list all the installed packages
shell@android:/ $ pm path <package_name> -> Find the stored APK path of an installed application
shell@android:/ $ pm install /path/to/apk
shell@android:/ $ pm uninstall <package_name>
shell@android:/ $ pm disable <package_name>


logcat is a privileged tool that allows you to view system and application logs with flexible filters.
shell@android:/ $ logcat
shell@android:/ $ logcat -s tag -> If you know the name of the tag you are looking for

---------------
shell@android:/ $ getprop -> get system properties
shell@android:/ $ dumpsys -> dump status of all system information and services 
shell@android:/ $ service list


+] Drozer commands:

$ adb forward tcp:31415 tcp:31415
$ drozer console connect

dz> run app.package.list -f insecure
dz> run app.package.info -a com.android.insecurebankv2
dz> run app.package.attacksurface com.android.insecurebankv2
dz> run app.activity.info -a com.android.insecurebankv2
dz> run app.activity.start --component com.android.insecurebankv2 com.android.insecurebankv2.ViewStatement
